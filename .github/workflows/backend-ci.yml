name: Continuous Integration backend

on:
  pull_request:
    branches:
      - main
    paths:
      - 'starter/backend/**'
  workflow_dispatch: 

jobs:
  
  lint-backend:
    name: Lint Backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache pipenv dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pipenv
          key: pipenv-${{ runner.os }}-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            pipenv-${{ runner.os }}-


      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9.13

      - name: Install pipenv
        run: pip3 install pipenv

      - name: Install dependencies
        run: pipenv install
        working-directory: ./starter/backend

      - name: Run lint
        run: pipenv run lint
        working-directory: ./starter/backend

  test-backend:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9.13

      - name: Install pipenv
        run: pip3 install pipenv
      
      - name: Install dependencies
        run: pipenv install
        working-directory: ./starter/backend

      - name: Run tests
        run: pipenv run test
        working-directory: ./starter/backend

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint-backend, test-backend]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9.13

      - name: Install pipenv
        run: pip3 install pipenv
      
      - name: Install dependencies
        run: pipenv install
        working-directory: ./starter/backend

      - name: Build application
        run: docker build --tag mp-backend:latest .
        working-directory: ./starter/backend
